(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{659:function(a,t,s){"use strict";s.r(t);var r=s(56),l=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[a._v("#")]),a._v(" log")]),a._v(" "),s("h3",{attrs:{id:"成员初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#成员初始化"}},[a._v("#")]),a._v(" 成员初始化")]),a._v(" "),s("h3",{attrs:{id:"创建对象的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建对象的过程"}},[a._v("#")]),a._v(" 创建对象的过程")]),a._v(" "),s("p",[a._v("假设有个名为 Dog 的类：")]),a._v(" "),s("ol",[s("li",[a._v("即使没有显式地使用 static 关键字，构造器实际上也是静态方法。所以，当首次\n创建Dog 类型的对象或是首次访问Dog 类的静态方法或属性时，Java 解释器必\n须在类路径中查找，以定位 Dog.class")]),a._v(" "),s("li",[a._v("当加载完 Dog.class 后（后面会学到，这将创建一个 Class 对象），有关静态初始化的所有动作都会执行。因此，静态初始化只会在首次加载 Class 对象时初始化一次.")]),a._v(" "),s("li",[a._v("当用 new Dog() 创建对象时，首先会在堆上为 Dog 对象分配足够的存储空间")]),a._v(" "),s("li",[a._v("分配的存储空间首先会被清零，即会将 Dog 对象中的所有基本类型数据设置为\n默认值（数字会被置为 0，布尔型和字符型也相同），引用被置为 null")]),a._v(" "),s("li",[a._v("执行所有出现在字段定义处的初始化动作")]),a._v(" "),s("li",[a._v("执行构造器。你将会在 “复用” 这一章看到，这可能会牵涉到很多动作，尤其当涉及继承的时候")])]),a._v(" "),s("h2",{attrs:{id:"learn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#learn"}},[a._v("#")]),a._v(" learn")]),a._v(" "),s("h3",{attrs:{id:"每日一题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[a._v("#")]),a._v(" 每日一题")])])}),[],!1,null,null,null);t.default=l.exports}}]);