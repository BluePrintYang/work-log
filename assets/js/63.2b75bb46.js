(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{525:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" log")]),t._v(" "),a("h3",{attrs:{id:"校园号管理-新建管理员时-一个学号可以搜索出2条记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#校园号管理-新建管理员时-一个学号可以搜索出2条记录"}},[t._v("#")]),t._v(" 校园号管理，新建管理员时，一个学号可以搜索出2条记录")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("请求")]),t._v("： /v7/admin/campus/admin/usertree/queryAllUsersInSchool?name=202011090013&keyword=202011090013&pageNum=1&pageSize=10&total=0")]),t._v(" "),a("p",[a("strong",[t._v("项目：")]),t._v(" "),a("em",[a("strong",[t._v("campus-account")])])])]),t._v(" "),a("h4",{attrs:{id:"queryallusersinschool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#queryallusersinschool"}},[t._v("#")]),t._v(" "),a("code",[t._v("queryAllUsersInSchool")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("获取租户id")])]),t._v(" "),a("li",[a("p",[t._v("调用 "),a("em",[a("strong",[t._v("user-provider")])]),t._v(" "),a("code",[t._v("listUserBaseByUserExtendForPage")])])]),t._v(" "),a("li",[a("p",[t._v("根据租户id和keyword模糊查询用户，有一个是否绑定用户")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" t_cpdaily_users\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" tenant_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ysu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" pwid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'202011090013'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" instr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("alias"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'202011090013'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" instr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("open_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'202011090013'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v("\n       instr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mobilephone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'202011090013'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LIMIT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n")])])]),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bindPerson != null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("choose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("when")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("bindPerson"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            and pwid != ''\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("when")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("otherwise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            and pwid = ''\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("otherwise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("choose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("根据查询的pwid，去用户表关系表查询用户id")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("原因")]),t._v("："),a("code",[t._v("t_cpdaily_users")]),t._v("表中包含多条数据")])]),t._v(" "),a("h4",{attrs:{id:"解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),a("p",[t._v("通过"),a("code",[t._v("user_auth")]),t._v("库查询")]),t._v(" "),a("h2",{attrs:{id:"undo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undo"}},[t._v("#")]),t._v(" undo")]),t._v(" "),a("h2",{attrs:{id:"problem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#problem"}},[t._v("#")]),t._v(" problem")]),t._v(" "),a("h2",{attrs:{id:"learn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#learn"}},[t._v("#")]),t._v(" learn")]),t._v(" "),a("h3",{attrs:{id:"布隆过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),a("p",[a("strong",[t._v("docker好用！！！")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("docker pull redislabs/rebloom    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取镜像 ")]),t._v("\ndocker run -p6379:6379 redislabs/rebloom    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行容器 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("redis-cli    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 连接容器中的 redis 服务")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("布隆过滤器有二个基本指令，bf.add  添加元素，bf.exists  查询元素是否存在")]),t._v(" "),a("p",[t._v("注意  bf.add  只能一次添加一个元素，如果想要一次添加多个，就需要用到  bf.madd  指令。同样如果需要一次查询多个元素是否存在，就需要用到  bf.mexists  指令。")])]),t._v(" "),a("blockquote",[a("p",[t._v("布隆过滤器可以理解为一个不怎么精确的  set  结构，当你使用它的  contains  方法判断某个对象是否存在时，它可能会误判。")]),t._v(" "),a("p",[t._v("当布隆过滤器说某个值存在时，这个值可能不存在；当它说不存在时，那就肯定不存在。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);