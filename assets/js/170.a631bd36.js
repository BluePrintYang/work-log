(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{534:function(t,e,a){"use strict";a.r(e);var r=a(44),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" log")]),t._v(" "),a("h2",{attrs:{id:"learn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#learn"}},[t._v("#")]),t._v(" learn")]),t._v(" "),a("h3",{attrs:{id:"每日一题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#每日一题"}},[t._v("#")]),t._v(" 每日一题")]),t._v(" "),a("h3",{attrs:{id:"object为什么是所有类的父类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object为什么是所有类的父类"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/62037031",target:"_blank",rel:"noopener noreferrer"}},[t._v("Object为什么是所有类的父类"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[a("p",[t._v("由于我们的Java是运行在JVM之上的语言，所以有一种可能是，我们的编译器在编译代码的时候，如果该类没有继承任何类，它会自动的帮我们在编译的时候加上默认的父类“Object“，若该类有父类了就不作处理，这样一来我们就可以使用Object里面public跟protected的方法了。")])]),t._v(" "),a("li",[a("p",[t._v("还有一种可能是，在编译的时候保持原样，只是在运行的时候去判断有没有显式继承其他类，若没有则默认把Object当成自己父类处理。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("通过“javap”命令可以看到反编译出来的文件，编译器并没有在编译的时候把“extends Object“添加上去，那么可见是第2种方式实现的。")]),t._v(" "),a("p",[t._v("此时如果你在网上查找资料的话会发现,有些人使用jdk6的时候，反编译出来Java源码会存在“extends Object“。所以我们总结下来，不同的jdk版本实现方式是不一样的。")])]),t._v(" "),a("p",[t._v("既然是编译器或者运行期JVM才帮我们做了继承这件事，那为什么我们写代码的时候可以直接用这些方法呢？")]),t._v(" "),a("blockquote",[a("p",[t._v("答：其实这是IDE帮我们做的处理，默认了类都是继承自Object，才能直接使用里面的方法。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);